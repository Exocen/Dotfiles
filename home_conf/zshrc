CASE_SENSITIVE="false"
DISABLE_AUTO_UPDATE="true"
DISABLE_LS_COLORS="false"
DISABLE_AUTO_TITLE="false"
COMPLETION_WAITING_DOTS="true"
ZSH_COMPDUMP="~/.cache"

export PATH="/usr/sbin:/sbin:$PATH"

zstyle ':completion:*' menu select
compctl -/ cd # type a directory's name to cd to it.
eval $(dircolors -b)

autoload -U promptinit
promptinit
autoload -U colors # add some color

setopt autopushd pushdminus pushdsilent pushdtohome
setopt autocd
setopt cdablevars
setopt interactivecomments
setopt nobanghist
# Allows ‘>’ redirection to truncate existing files. Otherwise ‘>!’ or ‘>|’ must be used to truncate a file.
# setopt noclobber
setopt SH_WORD_SPLIT
setopt nohup
setopt extendedglob
setopt correct
setopt NO_RM_STAR_SILENT

# History stuff
setopt HIST_REDUCE_BLANKS
setopt HIST_IGNORE_SPACE
setopt SHARE_HISTORY
setopt HIST_IGNORE_ALL_DUPS
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history

# Vars used later on by zsh
export EDITOR="vim"
export BROWSER=firefox
export TERM=xterm-256color

# ohmyzsh !
export ZSH=$HOME/.oh-my-zsh
plugins=(git docker sudo systemd lxd)
ZSH_THEME="powerlevel9k/powerlevel9k"
source $ZSH/oh-my-zsh.sh
# systemd plug -> sc-cmd
# sudo plug -> ESC * 2

# User configuration omz
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'

# Powerlevel10k (https://github.com/Powerlevel9k/powerlevel9k powerlevel10k)
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir_writable dir vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(context status root_indicator background_jobs command_execution_time)

POWERLEVEL9K_STATUS_OK=false

POWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND=83
POWERLEVEL9K_CONTEXT_REMOTE_FOREGROUND=3
POWERLEVEL9K_CONTEXT_ROOT_FOREGROUND=1
POWERLEVEL9K_CONTEXT_SUDO_FOREGROUND=1
POWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND=6
POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND=0

# allow approximate
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

# tab completion for PID :D
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*' force-list always

# cd not select parent dir.
zstyle ':completion:*:cd:*' ignore-parents parent pwd
zstyle ':completion:*:c:*' file-patterns "*(-/)" ignore-parents parent pwd

# Key bindings
typeset -g -A key
bindkey '^?' backward-delete-char
bindkey '^[[1~' beginning-of-line
bindkey '^[[5~' up-line-or-history
bindkey '^[[3~' delete-char
bindkey '^[[4~' end-of-line
bindkey '^[[6~' down-line-or-history
bindkey '^[[A' up-line-or-search
bindkey '^[[D' backward-char
bindkey '^[[B' down-line-or-search
bindkey '^[[C' forward-char

# Set up auto extension stuff
alias -s html=$BROWSER
alias -s org=$BROWSER
alias -s php=$BROWSER
alias -s com=$BROWSER
alias -s net=$BROWSER
alias -s png=mcomix
alias -s jpg=mcomix
alias -s gif=mcomix
alias -s svg=mcomix
alias -s mkv=vlc
alias -s mp4=vlc
alias -s avi=vlc
alias -s mp3=vlc
alias -s sxw=soffice
alias -s doc=soffice
alias -s gz=tar xzf
alias -s bz2=tar xjf
alias -s zip=unzip
alias -s java=$EDITOR
alias -s txt=$EDITOR
alias -s PKGBUILD=$EDITOR
alias -s jar=java -jar
alias -s pdf='evince'
alias -s py='py'

# Utilities aliases
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
alias psf='ps -e | grep -i'
alias psa='ps -uf --ppid 2 -p 2 --deselect'
alias ll='ls -lFh --group-directories-first --color=auto'
alias la='ls -Ah  --group-directories-first'
alias lla='ls -AlFh --group-directories-first'
alias l='ls -CFh  --group-directories-first'
alias cl='clear'
alias s='cd ..'
alias dudu='du -hd1 | sort -h'
alias rmte='find . -empty -type d'
alias rmted='find . -empty -type d -delete -print'
alias x='exit'
alias sx='startx'
alias finame="find * -iname "
alias kbfr='setxkbmap fr'
alias kbus='setxkbmap us'
alias j='jobs'
alias m='make'
alias k='killall -I'
alias pend='sudo systemctl suspend'
alias nate='sudo systemctl hibernate'
alias brid='sudo systemctl hybrid'
alias down='sudo poweroff'
alias boot='sudo reboot'
alias lsblk='lsblk -o name,mountpoint,fstype,label,size,fsavail,fsused,fsuse%,rota,uuid'
alias lgt='pkill KILL -U'
alias ff='firefox'
alias cc='chromium-browser --proxy-auto-detect'
alias ch='google-chrome-stable'
alias py='python3'
alias py3='python3'
alias py2='python2'
alias ipy='ipython3'
alias pl='perl -d -e 1'
alias jar='java -jar'
alias am='alsamixer'
alias em='emacs -nw'
alias xem='sudo emacs -nw'
alias tre='tree -C --dirsfirst'
alias rmcache='sudo rm -rf ~/.cache/'
alias fuspaces='for f in *\ *; do mv "$f" "${f// /_}"; done '
alias grubconfgenq='sudo grub2-mkconfig -o /boot/grub2/grub.cfg'
alias openvpnconf='sudo openvpn --config'
alias viewtar='tar -tf'
alias myip='curl ipinfo.io/ip'

# mount
function mnt() {
    mkdir -p $2
    sudo mount $1 $2

}

function mountntfs() {
    mkdir -p $2
    sudo mount -t ntfs -o uid=$UID,umask=22 $1 $2

}

# rsync
function cpr() {
    rsync --archive -hh --partial --info=stats1 --info=progress2 --modify-window=1 "$@"
}
function mvr() {
    rsync --archive -hh --partial --info=stats1 --info=progress2 --modify-window=1 --remove-source-files "$@"
}

### Packages managers
# dpkg
alias dbi='sudo dpkg -i'
alias dbr='sudo dpkg -r'

# apt
alias apu='sudo apt update'
alias appg='sudo apt upgrade'
alias apd='sudo apt dist-upgrade'
alias apugd="sudo apt update -y && sudo apt -y full-upgrade && sudo apt autoremove -y && aptpurge"
alias api='sudo apt install'
alias apie='sudo apt install -t experimental'
alias apr='sudo apt remove'
alias apar='sudo apt autoremove'
alias apcc='sudo apt clean && sudo apt autoclean'
alias apsearch='apt-cache search'
alias aps='apt search'
alias apse='apt-cache search -t experimental'
alias apshow='apt-cache showpkg'

# pikaur
alias auri='pikaur -S --noedit'
alias aurr='pikaur -Rsu'
alias auru='pikaur -Syu'
alias aurs='pikaur -Ss'
alias aurl='pikaur -Qe'
alias aurc='pikaur -Qdt ; pikaur -Sc --noconfirm ; sudo pacman -Rnus $(pacman -Qtdq) 2>/dev/null'

# yum
alias yu='sudo yum update --color=always'
alias ys='yum search --color=always'
alias yi='sudo yum install --color=always'
alias yr='sudo yum autoremove --color=always'
alias yc='sudo yum clean all --color=always'

# dnf
alias dnf='sudo dnf'
alias dnfdistclean='sudo dnf clean all'
alias dnfdistsync='sudo dnf distro-sync'
alias dnfi='sudo dnf install'
alias dnfpkgclean='sudo dnf remove $(package-cleanup --leaves)'
alias dnfr='sudo dnf erase'
alias dnfs='sudo dnf search'
alias dnfshow='sudo dnf info'
alias dnfupd='sudo dnf check-update'
alias dnfupg='sudo dnf upgrade'

### Functions

## Archive functions
# Handy Extract function
function extract() {
    if [ -f $1 ]; then
        case $1 in
        *.tar.bz2) tar xvjf $1 ;;
        *.tar.gz) tar xvzf $1 ;;
        *.bz2) bunzip2 $1 ;;
        *.rar) unrar x $1 ;;
        *.gz) gunzip $1 ;;
        *.tar) tar xvf $1 ;;
        *.tbz2) tar xvjf $1 ;;
        *.tgz) tar xvzf $1 ;;
        *.zip) unzip $1 ;;
        *.Z) uncompress $1 ;;
        *.xz) tar xvf $1 ;;
        *.bz) tar xjvf $1 ;;
        *.7z) 7z x $1 ;;
        *) echo "'$1' cannot be extracted via >extract<" ;;
        esac
    else
        echo "'$1' is not a valid file!"
    fi
}

# Creates an archive (*.tgz) from given list.
function maketar() { tar cvzf $1.tgz $*; }

# Create a ZIP archive of a file or folder.
function makezip() { zip -r "${1%%/}.zip" "$1"; }

## Utilities functions
# Crypt function with gpg
function crypt() { gpg -co "${1}.gpg" "$1"; }

function decrypt() {
    SUFFIX=".gpg"
    NEW_FILE=${1%$SUFFIX}
    gpg -do ${NEW_FILE} $1
}

# move file(s) to tmp (with copy conservation in tmp)
function del() {
    for file in "$@"; do mv --backup=t "$file" /tmp/; done
}

function c() {
    # builtin cd "$*"
    cd "$@"
    ls -CFh --group-directories-first
}

function dkill() {
    mykill=$(ps -ef | grep $1 | awk '{print $2}')
    kill -9 $mykill 2>/dev/null
}

# Make your directories and files access rights sane.
function sanitize() { chmod -R u=rwX,g=rX,o= "$@"; }

## Git functions
function gitautoconfig() {
    delta -V &>/dev/null && git config --global core.pager delta || git config --unset --global core.pager
    git config --global pull.rebase false
    git config --global user.email Exocen@users.noreply.github.com
    git config --global user.name "Exocen"
    git config --global push.default simple
}

function aptpurge() {
    sudo apt purge $(dpkg -l | grep '^rc' | awk '{print $2}') -y
}

## Proxy functions
function eproxy() {
    export https_proxy=$1
    export http_proxy=$1
    export ftp_proxy=$1
    export sftp_proxy=$1
    export npm_config_proxy=$1
    export npm_config_https_proxy=$1
    export ALL_PROXY=$http_proxy
}

function unproxy() {
    unset http_proxy
    unset https_proxy
    unset npm_config_proxy
    unset npm_config_https_proxy
    unset ftp_proxy
    unset sftp_proxy
    unset ALL_PROXY
}

## Docker functions
function docker_clean_everything() {
    EXIT_STATUS=0
    docker_stop_container || EXIT_STATUS=$?
    docker_clean_container || EXIT_STATUS=$?
    docker_clean_images || EXIT_STATUS=$?
    docker_clean_volumes || EXIT_STATUS=$?
}

function docker_clean_container() {
    docker rm $(docker ps -aq)
}

function docker_stop_container() {
    docker stop $(docker ps -q)
}

function docker_clean_images() {
    docker rmi $(docker images -q)
}

function docker_clean_volumes() {
    docker volume rm $(docker volume ls -q)
}

function regex() { gawk 'match($0,/'$1'/, ary) {print ary['${2:-'0'}']}'; }
